// ==============================================
//              Buttons
// ==============================================

// Button Mixin
@mixin button(
	$classname: btn, 
	$size: medium, 
	$color: #FFFFFF, 
	$background-color: $primary-color,
	$type: solid, 
	$rounded: $button-radius
	) { $output: #{'.' + $classname};
		@if $classname==false {
				$output: '&';
		}
		
		#{$output} {
				// Every button
				display: block;
				width: 100%;
				font-weight: 300;
				letter-spacing: 0.1em;
				text-align: center;
				text-decoration: none;
				white-space: nowrap;
				cursor: pointer;
				background-color: transparent;
				box-sizing: border-box;
				margin: .5em 0;
				transition: $button-transition;
				

				@media only screen and (min-width: $medium-up) {
						display: inline-block;
						margin-right: .5em;
						margin-left: 0;
						width: auto;
				}
				// Size
				@if $size==small {
						height: 28px;
						padding: 0 10px;
						font-size: .8em;
						text-transform: uppercase;
						line-height: 28px;
				}
				@else if $size==medium {
						height: 38px;
						padding: 0 30px;
						font-size: 1em;
						line-height: 38px;
				}
				@else if $size==large {
						height: 58px;
						padding: 0 40px;
						font-size: 1.2em;
						line-height: 58px;
				}
				// Type
				@if $type==outline {
						color: $background-color;
						border: 1px solid $background-color;
				}
				@else if $type==solid {
						color: lighten($color, 100%);
						background-color: $background-color;
						border: 1px solid $background-color;
				}
				// Rounded
				@if $rounded==true {
						border-radius: $global-radius;
				}
				@else if $rounded==false {
						border-radius: 0;
				}
				@else if $rounded==pill {
						border-radius: 100px;
				}
				@else if unit($rounded)==px {
						border-radius: $rounded;
				}
		}
		// Hover & Focus State
		#{$output}:hover,
		#{$output}:focus {
				outline: 0;
				@if $type==solid {
						background-color: darken($background-color, 11%);
						border-color: darken($background-color, 11%);
						transition: $button-transition;
				}
				@else if $type==outline {
						color: $color;
						border-color: $background-color;
						background-color: $background-color;
						transition: $button-transition;
				}
		}
		#{$output}:active {
				outline: 0;
				@if $type==solid {
						background-color: darken($color, 11%);
						border-color: darken($color, 11%);
				}
				@else if $type==border {
						border-color: darken($color, 15%);
				}
		}
}

// Create your own bullet proof button!

	// MIXIN TEMPLATE

	// @include buttion(
	// $classname: btn-small, 
	// $size: small, 
	// $color: #FFFFFF, 
	// $background-color: $secondary-color,
	// $type: solid, 
	// $rounded: $button-radius
	// );

// Normal Solid button
@include button (
	$classname: btn,
	$size: medium,
	$color: $primary-color,
	$type: solid,
	$rounded: $button-radius
	);

// Outline button
@include button (
	$classname: btn-outline,
	$size: medium,
	$color: $white,
	$type: outline,
	$rounded: $button-radius
	);


// Shape Helper classes
.rounded{
	border-radius:$global-radius;
}
.pill{
	border-radius:100px;
}

// Color Helper classes
.secondary{
	background-color: $secondary-color;
	border-color: $secondary-color;
	&:hover{
		background-color: darken($secondary-color, 10%);
		border-color: darken($secondary-color, 10%);
	}
}
.neutral{
	background-color: $light-gray;
	border-color: darken($dark-gray, 1%);
	color: darken($dark-gray, 50%);
		&:hover{
		background-color: darken($light-gray, 5%);
		border-color: darken($dark-gray, 5%);
		color: darken($dark-gray, 50%);
	}
}


button{
	@include button($classname: false);
	&:active, &:focus{
		outline:none;
	}
}

// Input button Styling
input[type="submit"],
input[type="reset"],
input[type="button"] {
	@include button(
	$classname: btn,
	$size: medium,
	$color: $primary-color,
	$type: solid,
	$rounded: false);
		height: auto;
}

input[type="submit"]:focus,
input[type="reset"]:focus,
input[type="button"]:focus {
		height: auto;
		box-shadow: none;
}
